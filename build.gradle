buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'idea'
    id 'biz.aQute.bnd.builder'  version "4.2.0"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'

// For testing
//apply plugin: 'groovy'

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
  maven {
   url "https://repos.inhabitech.com:8084/repository/smartspaces-io"
  }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

group='io.smartspaces'
version =  '0.4.0-SNAPSHOT'

ext {
	osgiVersion = "0.4.0.SNAPSHOT"
}

dependencies {
  compile('org.apache.servicemix.bundles:org.apache.servicemix.bundles.quartz:2.1.7_1') {
    exclude group: 'c3p0', module: 'c3p0'
    transitive = false
  }
  
  compile("org.apache.commons:com.springsource.org.apache.commons.codec:1.4.0")
  compile("org.slf4j:slf4j-api:1.7.10")

  compile('com.orientechnologies:orientdb-core:3.0.20')	
  compile('com.orientechnologies:orientdb-client:3.0.20')	
  compile('com.orientechnologies:orientdb-server:3.0.20') {
    exclude group: 'javax.mail', module: 'mail'
    transitive = false
  }	
  //compile('com.orientechnologies:orientdb-enterprise:2.2.7')

  runtime("org.slf4j:slf4j-jdk14:1.7.10")

  //testCompile("joda-time:joda-time:2.8.2")
  //testCompile("org.slf4j:slf4j-simple:1.7.10")
  //testCompile("org.codehaus.groovy:groovy-all:2.4.1")
  //testCompile("org.spockframework:spock-core:1.0-groovy-2.4")
  //testRuntime("cglib:cglib-nodep:3.1")
  //testRuntime("org.objenesis:objenesis:2.1")
}

artifacts {
  archives jar
}

jar {
  baseName = 'quartz-orientdb'

  bnd """
    Bundle-SymbolicName: quartz.orientdb
    Bundle-Version: ${osgiVersion}
	
    Export-Package: !io.smartspaces.scheduling.quartz.orientdb.internal.*, \\
                    io.smartspaces.scheduling.quartz.orientdb.*
		  
    Private-Package: io.smartspaces.scheduling.quartz.orientdb.internal.*

    Import-Package: *
  """
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${nexusUrl}/repository/smartspaces-io-release/") {
                authentication(userName: nexusUsername, password: nexusPassword)
	    }
            snapshotRepository(url: "${nexusUrl}/repository/smartspaces-io-snapshot/") {
                authentication(userName: nexusUsername, password: nexusPassword)
	    }
	}
    }
}
